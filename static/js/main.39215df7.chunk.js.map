{"version":3,"sources":["resources/csv/RawSpawnData.csv","resources/csv/RawWaterSpawnData.csv","resources/csv/HeadbuttSpawnData.csv","Types.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Types","react_default","a","createElement","Fragment","this","props","types","map","type","index","key","className","toLowerCase","substr","Component","defaultProps","displayAs","POKEMON_DATA","require","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","regionSorting","Kanto","Johto","Hoenn","Sinnoh","Unova","Kalos","Alola","sourceData","land","water","headbutt","filteredData","repelTrickData","sortByColumns","pokedexNumber","_sortArea","min","tier","morning","day","night","evolution_synonyms","state","filter","name","area","sortBy","column","direction","sorted","settingsModalOpen","pagination","stored_settings","localStorage","getItem","JSON","parse","settings","assign","csv_files","Promise","all","file","resolve","reject","Papa","header","download","skipEmptyLines","complete","error","then","results","data","_dataParser","padStart","membership","length","membersAccessible","region","parseInt","levels","match","replace","max","repelId","heldItem","regex","tokens","split","forEach","token","tokenIndex","push","href","concat","arguments","undefined","target","rel","hasOwnProperty","fname","name_match","findPokemonSynonyms","synonym","_this2","farea","fareaReg","RegExp","entry","pokemon","_filterMatchSynonym","e","sort","_this3","_","reverse","setState","location","areaRepelData","prominent_group_count","Math","apply","toConsumableArray","values","prominent_group_max_level_index","indexOf","prominent_group_max_level","keys","preventDefault","alternateDirection","rarity","console","Error","setting","value","group","setItem","stringify","quickListData","b","id","forceUpdate","inQuickList","getQuickList","saveQuickList","remove","find","_this4","Segment","List","horizontal","Item","Button","onClick","setFilter","ev_yield","_this5","getSourceTypeLabel","icon_rod","src","alt","_this$state$sortBy","showColumns","numberOfColumns","reduce","sum","v","pageSize","resultsPerPage","currentPage","Table","compact","basic","sortable","unstackable","Header","Row","HeaderCell","textAlign","time_of_day","ms","repel","item","ev","Body","slice","renderTableRow","Footer","colSpan","Pagination","defaultActivePage","totalPages","ceil","onPageChange","_ref","activePage","paginationState","_this6","repelTrickPossible","icon_morning","title","icon_day","icon_night","icons_rod","Old","Good","Super","Cell","Icon","removeFromQuickList","aria-hidden","addToQuickList","src_Types","rod","getTierClassName","renderEvYield","_this7","modalOpen","icon","floated","Modal","size","open","onClose","Content","Form","label","Field","Checkbox","toggle","checked","setSetting","Input","step","onChange","_ref2","Actions","color","_ref3","_this8","number_of_results","active_index","tab_panes","menuItem","render","Tab","Pane","renderTable","Container","renderSettingsModal","Dropdown","placeholder","search","selection","clearable","obj","options","text","link","panes","defaultActiveIndex","renderQuickList","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.39215df7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RawSpawnData.e4ef9d28.csv\";","module.exports = __webpack_public_path__ + \"static/media/RawWaterSpawnData.f8ca3dfe.csv\";","module.exports = __webpack_public_path__ + \"static/media/HeadbuttSpawnData.bed677a0.csv\";","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Types extends Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.props.types.map((type, index) => <span key={index + type} className={'type-icon type-'+type.toLowerCase()}>{type.substr(0,3)}</span>)}\n            </React.Fragment>\n        );\n    }\n}\n\nTypes.propTypes = {\n    types: PropTypes.array.isRequired,\n};\n\nTypes.defaultProps = {\n    displayAs: 'short'\n};\n\nexport default Types\n","import React, {Component} from 'react';\nimport * as Papa from 'papaparse';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport './resources/pokdex_sprites.css';\nimport {\n    Button,\n    Checkbox,\n    Container,\n    Dropdown,\n    Form,\n    Icon,\n    Input,\n    List,\n    Modal,\n    Pagination,\n    Segment,\n    Tab,\n    Table\n} from \"semantic-ui-react\";\nimport _ from 'lodash';\nimport Types from \"./Types\";\n\nconst POKEMON_DATA = require('./resources/json/pokemon_data');\n\nclass App extends Component {\n\n    types = ['land', 'water', 'headbutt'];\n    regionSorting = {\n        Kanto: 1,\n        Johto: 2,\n        Hoenn: 3,\n        Sinnoh: 4,\n        Unova: 5,\n        Kalos: 6,\n        Alola: 7,\n    };\n\n    sourceData = {\n        land: [],\n        water: [],\n        headbutt: [],\n    };\n\n    filteredData = {\n        land: [],\n        water: [],\n        headbutt: [],\n    };\n\n    repelTrickData = {};\n\n    sortByColumns = {\n        pokedexNumber: ['pokedexNumber', '_sortArea', 'location'],\n        _sortArea: ['_sortArea', 'tier', 'pokedexNumber', 'location'],\n        min: ['min', '_sortArea', 'location'],\n        tier: ['tier', '_sortArea', 'pokedexNumber', 'location'],\n        morning: ['morning', 'day', 'night', '_sortArea', 'pokedexNumber', 'location'],\n        day: ['day', 'morning', 'night', '_sortArea', 'pokedexNumber', 'location'],\n        night: ['night', 'morning', 'day', '_sortArea', 'pokedexNumber', 'location'],\n    };\n\n    constructor() {\n        super();\n\n        this.evolution_synonyms = require('./resources/json/evolution_synonyms');\n\n        this.state = {\n            filter: {\n                name: '',\n                area: ''\n            },\n            sortBy: {\n                column: '_sortArea',\n                direction: 'ascending'\n            },\n            sorted: {\n                land: [],\n                water: [],\n                headbutt: [],\n            },\n            settingsModalOpen: false,\n            pagination: {\n                land: 1,\n                water: 1,\n                headbutt: 1\n            }\n        };\n\n        const stored_settings = localStorage.getItem('proSpawnsSettings') === null\n            ? {}\n            : JSON.parse(localStorage.getItem('proSpawnsSettings'));\n\n        this.state.settings = Object.assign({}, require('./resources/json/default_settings'), stored_settings);\n\n        const csv_files = [\n            require('./resources/csv/RawSpawnData.csv'),\n            require('./resources/csv/RawWaterSpawnData.csv'),\n            require('./resources/csv/HeadbuttSpawnData.csv'),\n        ];\n\n        Promise.all(csv_files.map(file => new Promise((resolve, reject) => {\n            Papa.parse(file, {\n                header: true,\n                download: true,\n                skipEmptyLines: true,\n                complete: resolve,\n                error: reject\n            });\n        }))).then(results => {\n\n            this.sourceData = {\n                land: results[0].data.map((data) => this._dataParser(data, 'land')),\n                water: results[1].data.map((data) => this._dataParser(data, 'water')),\n                headbutt: results[2].data.map((data) => this._dataParser(data, 'headbutt')),\n            };\n\n            this.filter();\n\n        });\n    }\n\n    _dataParser(data, type) {\n        data.pokedexNumber = data.pokedexNumber.padStart(3, '0');\n        data.membership = data.membership.length > 0 || data.membersAccessible.length;\n        data.morning = !!data.morning;\n        data.day = !!data.day;\n        data.night = !!data.night;\n        data._sortArea = this.regionSorting[data.region] + ' - ' + data.region + ' - ' + data.area;\n        data.min = parseInt(!!data.levels.match(/^(\\d+)-(\\d+)$/) ? data.levels.replace(/^(\\d+)-(\\d+)$/, '$1') : data.levels, 10);\n        data.max = parseInt(!!data.levels.match(/^(\\d+)-(\\d+)$/) ? data.levels.replace(/^(\\d+)-(\\d+)$/, '$2') : data.levels, 10);\n\n        delete data.membersAccessible;\n\n        let repelId = type + ' - ' + data.region + ' - ' + data.area;\n\n        if (typeof data.heldItem === 'string' && data.heldItem.length) {\n            const regex = /(\\[\\[([^\\]|]+)(\\|[^\\]]+)?]])/g;\n            const tokens = data.heldItem.replace(regex, '###$1###').split('###');\n\n            const heldItem = [];\n            tokens.forEach((token, tokenIndex) => {\n                if (token.match(regex)) {\n                    token.replace(regex, (...matches) => {\n                        heldItem.push(<a key={repelId + tokenIndex} href={`https://prowiki.info/index.php?title=Special:Search/${matches[2]}`} target=\"_blank\" rel=\"noopener noreferrer\">{matches[2]}</a>)\n                    });\n                } else {\n                    heldItem.push(token);\n                }\n            });\n            data.heldItem = heldItem;\n        }\n\n        if (!this.repelTrickData.hasOwnProperty(repelId)) {\n            this.repelTrickData[repelId] = {};\n        }\n        if (!this.repelTrickData[repelId].hasOwnProperty(data.max)) {\n            this.repelTrickData[repelId][data.max] = 0;\n        }\n        this.repelTrickData[repelId][data.max]++;\n\n        return data;\n    }\n\n    _filterMatchSynonym(name, fname) {\n        let name_match = false;\n        if (this.state.settings.findPokemonSynonyms && this.evolution_synonyms.hasOwnProperty(name)) {\n            this.evolution_synonyms[name].forEach(synonym => {\n                if (fname.length > 0 && synonym === fname) {\n                    name_match = true;\n                }\n            })\n        }\n        return name_match;\n    }\n\n    filter() {\n        const fname = this.state.filter.name;\n        const farea = this.state.filter.area;\n\n        if (fname.length === 0 && farea.length === 0) {\n            this.filteredData = {\n                land: [],\n                water: [],\n                headbutt: [],\n            };\n        } else {\n            try {\n                const fareaReg = new RegExp(farea.replace('*', '.*'), 'i');\n                this.types.forEach(type => {\n                    this.filteredData[type] = this.sourceData[type].filter(entry => {\n                        let name_match =\n                            (fname.length > 0 && entry.pokemon === fname)\n                            || this._filterMatchSynonym(entry.pokemon, fname);\n                        return name_match\n                            || (farea.length > 0 && entry._sortArea.match(fareaReg) !== null)\n                    });\n                });\n            } catch (e) {\n                // do not throw for invalid regex\n                this.filteredData = {\n                    land: [],\n                    water: [],\n                    headbutt: [],\n                };\n            }\n        }\n\n        // reset pagination when filters change\n        // eslint-disable-next-line react/no-direct-mutation-state\n        this.state.pagination = {\n            land: 1,\n            water: 1,\n            headbutt: 1\n        };\n        this.sort();\n    }\n\n    sort() {\n        const sorted = {};\n        this.types.forEach(type => {\n            if (this.state.sortBy.column) {\n                sorted[type] = _.sortBy(this.filteredData[type], this.sortByColumns[this.state.sortBy.column]);\n                if (this.state.sortBy.direction === 'descending') {\n                    sorted['type'] = sorted[type].reverse();\n                }\n            } else {\n                sorted[type] = this.filteredData[type];\n            }\n        });\n        this.setState({sorted: sorted});\n    }\n\n    repelTrickPossible(type, data) {\n        if (data.hasOwnProperty('location') && data.location === 'Fishing') return false;\n        let repelId = type + ' - ' + data.region + ' - ' + data.area;\n        if (!this.repelTrickData.hasOwnProperty(repelId)) return false;\n\n        const areaRepelData = this.repelTrickData[repelId];\n\n        const prominent_group_count = Math.max(...Object.values(areaRepelData));\n        const prominent_group_max_level_index = Object.values(areaRepelData).indexOf(prominent_group_count);\n        const prominent_group_max_level = Object.keys(areaRepelData)[prominent_group_max_level_index];\n\n        return data.min > prominent_group_max_level;\n    }\n\n    setFilter(filter, e) {\n        if (e) e.preventDefault();\n        if (!filter.hasOwnProperty('name')) filter.name = this.state.filter.name;\n        if (!filter.hasOwnProperty('area')) filter.area = this.state.filter.area;\n        // eslint-disable-next-line react/no-direct-mutation-state\n        this.state.filter = filter;\n        this.filter();\n    }\n\n    alternateDirection(direction) {\n        return direction === 'ascending' ? 'descending' : 'ascending';\n    }\n\n    sortBy(column) {\n        // eslint-disable-next-line react/no-direct-mutation-state\n        this.state.sortBy = {\n            column: column,\n            direction: this.state.sortBy.column === column ? this.alternateDirection(this.state.sortBy.direction) : 'ascending'\n        };\n        this.filter();\n    }\n\n    getTierClassName(rarity) {\n        switch (rarity) {\n            case \"1\":\n            case \"Common\":\n                return 'green';\n            case \"2\":\n            case \"3\":\n                return 'olive';\n            case \"4\":\n            case \"5\":\n            case \"Intermediate\":\n                return 'yellow';\n            case \"6\":\n            case \"7\":\n            case \"Rare\":\n                return 'orange';\n            case \"8\":\n            case \"9\":\n                return 'red';\n            default:\n                console.error(rarity);\n                throw new Error('rarity not found');\n        }\n    }\n\n    setSetting(setting, value, group) {\n        const settings = this.state.settings;\n        if (group) {\n            settings[group][setting] = value;\n        } else {\n            settings[setting] = value;\n        }\n        this.setState({settings: settings});\n        localStorage.setItem('proSpawnsSettings', JSON.stringify(settings));\n        this.filter();\n    }\n\n    getQuickList() {\n        const quickListData = localStorage.getItem('proSpawnsQuickList');\n        if (quickListData === null) return require('./resources/json/default_quicklist');\n        return JSON.parse(quickListData);\n    }\n\n    saveQuickList(quickListData) {\n        quickListData = quickListData.sort((a, b) => {\n            if (a.id === b.id) return 0;\n            return a.id > b.id ? 1 : -1;\n        });\n        localStorage.setItem('proSpawnsQuickList', JSON.stringify(quickListData));\n        this.forceUpdate();\n    }\n\n    addToQuickList(id, name) {\n        if (!this.inQuickList(id)) {\n            const quickListData = this.getQuickList();\n            quickListData.push({id: id, name: name});\n            this.saveQuickList(quickListData)\n        }\n    }\n\n    removeFromQuickList(id) {\n        const quickListData = this.getQuickList();\n        _.remove(quickListData, {id: id});\n        this.saveQuickList(quickListData);\n    }\n\n    inQuickList(id) {\n        return _.find(this.getQuickList(), {id: id}) !== undefined;\n    }\n\n    renderQuickList() {\n        const quickListData = this.getQuickList();\n        return (\n            !quickListData ? null :\n            <Segment>\n                <List horizontal >\n                    {quickListData.map((entry, index) => (\n                        <List.Item key={index}>\n                            <Button className='btn-lnk' onClick={() => this.setFilter({name: entry.name, area: ''})}>\n                                <i className={`pokedex-sprite pokedex-sprite-${entry.id}`}/>\n                                {entry.name}\n                            </Button>\n                        </List.Item>))}\n                </List>\n            </Segment>\n        );\n    }\n\n    getSourceTypeLabel(type) {\n        switch (type) {\n            case 'headbutt':\n                return 'Headbutting';\n            case 'water':\n                return 'Surfing and Fishing';\n            default:\n                return 'Walking';\n        }\n    }\n\n    renderEvYield(id) {\n        return _.filter(_.find(POKEMON_DATA, {id: id}).ev_yield.map((value, index) => {\n            if (value === 0) return null;\n            switch (index) {\n                case 0: return <small key={index} className='ev_yield_hp'><strong>{value}</strong>hp</small>;\n                case 1: return <small key={index} className='ev_yield_atk'><strong>{value}</strong>atk</small>;\n                case 2: return <small key={index} className='ev_yield_def'><strong>{value}</strong>def</small>;\n                case 3: return <small key={index} className='ev_yield_sp_atk'><strong>{value}</strong>sp.atk</small>;\n                case 4: return <small key={index} className='ev_yield_sp_def'><strong>{value}</strong>sp.def</small>;\n                case 5: return <small key={index} className='ev_yield_spd'><strong>{value}</strong>spd</small>;\n            }\n            return null;\n        }));\n    }\n\n    renderTable(type, data) {\n        if (data.length === 0) {\n            return <React.Fragment>No results for {this.getSourceTypeLabel(type)}</React.Fragment>\n        }\n\n        const icon_rod = <img src=\"https://img.pokemondb.net/sprites/items/fishing-rod.png\" alt=\"Fishing Rod\"/>;\n\n        const {column, direction} = this.state.sortBy;\n\n        const showColumns = this.state.settings.showColumns;\n\n        const numberOfColumns = 2 + Object.values(showColumns).reduce((sum, v) => sum + (v ? 1 : 0));\n        const pageSize = this.state.settings.resultsPerPage;\n        const currentPage = this.state.pagination[type];\n\n        return (\n            <Table key={type} compact='very' basic className={type} sortable unstackable>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell className='header-area' sorted={column === '_sortArea' ? direction : null} onClick={() => this.sortBy('_sortArea')}>\n                            Region - Area\n                        </Table.HeaderCell>\n                        {showColumns.id && (\n                            <Table.HeaderCell textAlign='right' className='header-id' sorted={column === 'pokedexNumber' ? direction : null} onClick={() => this.sortBy('pokedexNumber')}>ID</Table.HeaderCell>\n                        )}\n                        <Table.HeaderCell>Pokemon</Table.HeaderCell>\n                        {showColumns.time_of_day && type !== 'headbutt' && (\n                                <React.Fragment>\n                                    <Table.HeaderCell className='header-morning' sorted={column === 'morning' ? direction : null} onClick={() => this.sortBy('morning')}>M</Table.HeaderCell>\n                                    <Table.HeaderCell className='header-day' sorted={column === 'day' ? direction : null} onClick={() => this.sortBy('day')}>D</Table.HeaderCell>\n                                    <Table.HeaderCell className='header-night' sorted={column === 'night' ? direction : null} onClick={() => this.sortBy('night')}>N</Table.HeaderCell>\n                                </React.Fragment>\n                            )}\n                        {type === 'water' && <Table.HeaderCell className='header-rod'>{icon_rod}</Table.HeaderCell>}\n                        {showColumns.tier && <Table.HeaderCell className='header-tier' sorted={column === 'tier' ? direction : null} onClick={() => this.sortBy('tier')}>\n                            Tier\n                        </Table.HeaderCell>}\n                        {showColumns.ms && <Table.HeaderCell className='header-ms'>MS?</Table.HeaderCell>}\n                        {showColumns.levels && <Table.HeaderCell className='header-levels' textAlign='right' sorted={column === 'min' ? direction : null} onClick={() => this.sortBy('min')}>\n                            Levels\n                        </Table.HeaderCell>}\n                        {type !== 'headbutt' && showColumns.repel && <Table.HeaderCell className='header-repel'>Repel</Table.HeaderCell>}\n                        {showColumns.item && <Table.HeaderCell className='header-item'>Item</Table.HeaderCell>}\n                        {showColumns.ev && <Table.HeaderCell className='header-ev' textAlign='right'>EVs</Table.HeaderCell>}\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {data\n                        .slice((currentPage-1)*pageSize, currentPage*pageSize)\n                        .map(entry => this.renderTableRow(entry, type))}\n                </Table.Body>\n                {data.length > pageSize &&\n                <Table.Footer>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan={numberOfColumns}>\n                            <Pagination\n                                defaultActivePage={this.state.pagination[type]}\n                                totalPages={Math.ceil(data.length / pageSize)}\n                                onPageChange={(e, {activePage}) => {\n                                    const paginationState = this.state.pagination;\n                                    paginationState[type] = activePage;\n                                    this.setState({pagination: paginationState});\n                                }}\n                            />\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>}\n            </Table>\n        );\n    }\n\n    renderTableRow(entry, type) {\n        const showColumns = this.state.settings.showColumns;\n        const repelTrickPossible = this.repelTrickPossible(type, entry);\n\n        const icon_morning = <img src=\"https://img.pokemondb.net/images/locations/morning.png\" alt=\"Morning\" title=\"Morning\"/>;\n        const icon_day = <img src=\"https://img.pokemondb.net/images/locations/day.png\" alt=\"Day\" title=\"Day\"/>;\n        const icon_night = <img src=\"https://img.pokemondb.net/images/locations/night.png\" alt=\"Night\" title=\"Night\"/>;\n\n        const icons_rod = {\n            Old: <img src=\"https://img.pokemondb.net/sprites/items/old-rod.png\" alt=\"Old Rod\" title=\"Old Rod\"/>,\n            Good: <img src=\"https://img.pokemondb.net/sprites/items/good-rod.png\" alt=\"Good Rod\" title=\"Good Rod\"/>,\n            Super: <img src=\"https://img.pokemondb.net/sprites/items/super-rod.png\" alt=\"Super Rod\" title=\"Super Rod\"/>,\n        };\n\n        return (\n            <Table.Row key={JSON.stringify(entry)}>\n                <Table.Cell>\n                    <small>{entry.region} - </small>\n                    <Button className='btn-lnk' onClick={(e) => this.setFilter({name: '', area: entry.area + '$'}, e)}>\n                        {entry.area}\n                    </Button>\n                </Table.Cell>\n                {showColumns.id && <Table.Cell textAlign='right'><small>{entry.pokedexNumber}</small></Table.Cell>}\n                <Table.Cell>\n                    <i className={`pokedex-sprite pokedex-sprite-${entry.pokedexNumber}`}/>\n                    <Button className='btn-lnk' onClick={(e) => this.setFilter({name: entry.pokemon, area: ''}, e)}>{entry.pokemon}</Button>\n                    &nbsp;\n                    <a href={`https://pokemondb.net/pokedex/${entry.pokedexNumber}`} target='_blank' rel=\"noopener noreferrer\">\n                        <Icon name='external alternate'/>\n                    </a>\n                    &nbsp;\n                    {this.inQuickList(entry.pokedexNumber)\n                        ? (\n                            <Button className='btn-lnk' onClick={() => this.removeFromQuickList(entry.pokedexNumber)}>\n                                <i aria-hidden=\"true\" className=\"bookmark green icon\"/>\n                            </Button>\n                        ) : (\n                            <Button className='btn-lnk' onClick={() => this.addToQuickList(entry.pokedexNumber, entry.pokemon)}>\n                                <i aria-hidden=\"true\" className=\"bookmark outline grey icon\"/>\n                            </Button>\n                        )\n                    }\n                    {showColumns.types && <Types types={_.find(POKEMON_DATA, {id: entry.pokedexNumber}).types}/>}\n                </Table.Cell>\n                {type !== 'headbutt' && showColumns.time_of_day && (\n                    <React.Fragment>\n                        <Table.Cell textAlign='center' className={'row-morning ' + (entry.morning ? 'yellow' : '')}>{entry.morning ? icon_morning : null}</Table.Cell>\n                        <Table.Cell textAlign='center' className={'row-day ' + (entry.day ? 'blue' : '')}>{entry.day ? icon_day : null}</Table.Cell>\n                        <Table.Cell textAlign='center' className={'row-night ' + (entry.night ? 'grey' : '')}>{entry.night ? icon_night : null}</Table.Cell>\n                    </React.Fragment>\n                )}\n                {type === 'water'\n                    ? <Table.Cell className='row-rod'>{entry.rod ? icons_rod[entry.rod] : null}</Table.Cell>\n                    : null}\n                {showColumns.tier && <Table.Cell className={'row-tier ' + this.getTierClassName(entry.tier)} textAlign='center'>{entry.tier}</Table.Cell>}\n                {showColumns.ms && (\n                    <Table.Cell textAlign='center' className={entry.membership ? 'violet' : ''}>\n                        {entry.membership ?\n                            <i className='ui icon dollar sign white'/> : null}\n                    </Table.Cell>\n                )}\n                {showColumns.levels && <Table.Cell textAlign='right'>{entry.levels}</Table.Cell>}\n                {type !== 'headbutt' && showColumns.repel && (\n                    <Table.Cell textAlign='center' className={repelTrickPossible ? 'teal' : ''}>{repelTrickPossible ? 'Yes' : null}</Table.Cell>\n                )}\n                {showColumns.item && <Table.Cell>{entry.heldItem}</Table.Cell>}\n                {showColumns.ev && <Table.Cell className='ev_yield' textAlign='right'>{this.renderEvYield(entry.pokedexNumber)}</Table.Cell>}\n            </Table.Row>\n        );\n    }\n\n    renderSettingsModal() {\n        const modalOpen = this.state.settingsModalOpen;\n        const showColumns = this.state.settings.showColumns;\n\n        let showColumnsLabels = {\n                \"id\": 'pokedex id',\n                \"types\": 'pokemon types',\n                \"time_of_day\": 'time of day',\n                \"tier\": 'tier',\n                \"ms\": 'membership',\n                \"levels\": 'levels',\n                \"repel\": 'repel trick',\n                \"item\": 'held item',\n                \"ev\": 'ev yield'\n        };\n\n        return (\n            <React.Fragment>\n                <Button icon='cog' floated='right' onClick={() => this.setState({settingsModalOpen: true})}/>\n                <Modal size='mini' open={modalOpen} onClose={() => this.setState({settingsModalOpen: false})} >\n                    <Modal.Header>Settings</Modal.Header>\n                    <Modal.Content>\n                        <Form>\n                            {_.map(showColumnsLabels, (label, index) => (\n                                <Form.Field key={label + index}>\n                                    <Checkbox\n                                        label={`show ${label} column`}\n                                        toggle\n                                        checked={showColumns[index]}\n                                        onClick={() => this.setSetting(index, !showColumns[index], 'showColumns')}\n                                    />\n                                </Form.Field>\n                            ))}\n\n                            <Form.Field>\n                                <Form.Input\n                                    label={`results per page: ${this.state.settings.resultsPerPage}`}\n                                    min={10}\n                                    max={50}\n                                    name='resultsPerPage'\n                                    step={10}\n                                    type='range'\n                                    value={this.state.settings.resultsPerPage}\n                                    onChange={(e, {value}) => this.setSetting('resultsPerPage', value)}\n                                />\n                            </Form.Field>\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button color='green' onClick={() => this.setState({settingsModalOpen: false})}>\n                            Close\n                        </Button>\n                    </Modal.Actions>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n\n        const number_of_results = [].concat(...Object.values(this.state.sorted)).length;\n\n        let active_index = 0;\n\n        const tab_panes = this.types.map((type, index) => {\n            const data = this.state.sorted[type];\n            if (data.length === 0 && active_index === index) active_index++;\n            return {\n                menuItem: this.getSourceTypeLabel(type) + ` (${data.length})`,\n                render: () => <Tab.Pane>{this.renderTable(type, data)}</Tab.Pane>\n            }\n        });\n\n        return (\n            <Container>\n                <Segment>\n                    <Form>\n                        {this.renderSettingsModal()}\n                        <Dropdown\n                            placeholder='pokemon name...'\n                            search\n                            selection\n                            clearable\n                            value={this.state.filter.name}\n                            onChange={(e, obj) => this.setFilter({name: obj.value})}\n                            options={require('./resources/json/pokemon_data').map(entry => {return {key: entry.id, value: entry.name, text: entry.id + ': ' + entry.name}})}\n                        />\n\n                        &nbsp;\n                        &nbsp;\n\n                        <Input\n                            value={this.state.filter.area}\n                            onChange={(e) => this.setFilter({area: e.target.value})}\n                            icon={{ name: 'close', link: true, onClick: () => this.setFilter({area: ''})}}\n                            placeholder='region/area (regex)...'\n                        />\n                        &nbsp;\n                        &nbsp;\n                        &nbsp;\n                        <strong>{number_of_results} results</strong>\n                        <Form.Field>\n                            <Checkbox label='Include evolutions' checked={this.state.settings.findPokemonSynonyms} onClick={() => this.setSetting('findPokemonSynonyms', !this.state.settings.findPokemonSynonyms)}/>\n                        </Form.Field>\n                    </Form>\n                </Segment>\n\n                {number_of_results > 250\n                    ? <React.Fragment>Too many results to display</React.Fragment>\n                    : (\n                        number_of_results === 0\n                            ? <React.Fragment>Please try searching for something</React.Fragment>\n                            : <Tab panes={tab_panes} defaultActiveIndex={active_index} />\n                    )\n                }\n\n                {this.renderQuickList()}\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}