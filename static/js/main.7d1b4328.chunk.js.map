{"version":3,"sources":["resources/csv/RawSpawnData.csv","resources/csv/RawWaterSpawnData.csv","resources/csv/HeadbuttSpawnData.csv","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","POKEMON_DATA","require","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","types","regionSorting","Kanto","Johto","Hoenn","Sinnoh","Unova","Kalos","Alola","sourceData","land","water","headbutt","filteredData","repelTrickData","sortByColumns","pokedexNumber","_sortArea","min","tier","morning","day","night","evolution_synonyms","state","filter","name","area","sortBy","column","direction","sorted","settingsModalOpen","stored_settings","localStorage","getItem","JSON","parse","settings","assign","csv_files","Promise","all","map","file","resolve","reject","Papa","header","download","skipEmptyLines","complete","error","then","results","data","_dataParser","type","membersAccessible","padStart","membership","length","region","parseInt","levels","match","replace","max","repelId","heldItem","regex","tokens","split","forEach","token","tokenIndex","push","react_default","a","createElement","key","href","concat","arguments","undefined","target","rel","hasOwnProperty","fname","name_match","findPokemonSynonyms","synonym","_this2","farea","fareaReg","RegExp","entry","pokemon","_filterMatchSynonym","e","_","cloneDeep","sort","_this3","reverse","setState","location","areaRepelData","prominent_group_count","Math","apply","toConsumableArray","values","prominent_group_max_level_index","indexOf","prominent_group_max_level","keys","preventDefault","alternateDirection","rarity","console","Error","setting","value","group","setItem","stringify","quickListData","b","id","forceUpdate","inQuickList","getQuickList","saveQuickList","remove","find","_this4","Segment","List","horizontal","index","Item","Button","className","onClick","setFilter","ev_yield","_this5","getSourceTypeLabel","icon_morning","src","alt","title","icon_day","icon_night","icon_rod","icons_rod","Old","Good","Super","_this$state$sortBy","showColumns","Table","compact","basic","sortable","unstackable","Header","Row","HeaderCell","textAlign","time_of_day","Fragment","ms","repel","item","ev","Body","repelTrickPossible","Cell","Icon","removeFromQuickList","aria-hidden","addToQuickList","rod","getTierClassName","renderEvYield","_this6","modalOpen","icon","floated","Modal","size","open","onClose","Content","Form","label","Field","Checkbox","toggle","checked","setSetting","Actions","color","_ref","_this7","number_of_results","Container","renderSettingsModal","Dropdown","placeholder","search","selection","clearable","onChange","obj","options","text","Input","link","renderTable","renderQuickList","Component","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d1b4328.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RawSpawnData.1daa5028.csv\";","module.exports = __webpack_public_path__ + \"static/media/RawWaterSpawnData.844b0620.csv\";","module.exports = __webpack_public_path__ + \"static/media/HeadbuttSpawnData.5e104bfc.csv\";","import React, {Component} from 'react';\nimport * as Papa from 'papaparse';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport './resources/pokdex_sprites.css';\nimport {\n    Button,\n    Checkbox,\n    Container,\n    Dropdown,\n    Form,\n    Header,\n    Icon,\n    Input,\n    List,\n    Modal,\n    Segment,\n    Table\n} from \"semantic-ui-react\";\nimport _ from 'lodash';\n\nconst POKEMON_DATA = require('./resources/json/pokemon_data');\n\nclass App extends Component {\n\n    types = ['land', 'water', 'headbutt'];\n    regionSorting = {\n        Kanto: 1,\n        Johto: 2,\n        Hoenn: 3,\n        Sinnoh: 4,\n        Unova: 5,\n        Kalos: 6,\n        Alola: 7,\n    };\n\n    sourceData = {\n        land: [],\n        water: [],\n        headbutt: [],\n    };\n\n    filteredData = {\n        land: [],\n        water: [],\n        headbutt: [],\n    };\n\n    repelTrickData = {};\n\n    sortByColumns = {\n        pokedexNumber: ['pokedexNumber', '_sortArea', 'location'],\n        _sortArea: ['_sortArea', 'tier', 'pokedexNumber', 'location'],\n        min: ['min', '_sortArea', 'location'],\n        tier: ['tier', '_sortArea', 'pokedexNumber', 'location'],\n        morning: ['morning', 'day', 'night', '_sortArea', 'pokedexNumber', 'location'],\n        day: ['day', 'morning', 'night', '_sortArea', 'pokedexNumber', 'location'],\n        night: ['night', 'morning', 'day', '_sortArea', 'pokedexNumber', 'location'],\n    };\n\n    constructor() {\n        super();\n\n        this.evolution_synonyms = require('./resources/json/evolution_synonyms');\n\n        this.state = {\n            filter: {\n                name: '',\n                area: ''\n            },\n            sortBy: {\n                column: '_sortArea',\n                direction: 'ascending'\n            },\n            sorted: {\n                land: [],\n                water: [],\n                headbutt: [],\n            },\n            settingsModalOpen: false,\n        };\n\n        const stored_settings = localStorage.getItem('proSpawnsSettings') === null\n            ? {}\n            : JSON.parse(localStorage.getItem('proSpawnsSettings'));\n\n        this.state.settings = Object.assign({}, require('./resources/json/default_settings'), stored_settings);\n\n        const csv_files = [\n            require('./resources/csv/RawSpawnData.csv'),\n            require('./resources/csv/RawWaterSpawnData.csv'),\n            require('./resources/csv/HeadbuttSpawnData.csv'),\n        ];\n\n        Promise.all(csv_files.map(file => new Promise((resolve, reject) => {\n            Papa.parse(file, {\n                header: true,\n                download: true,\n                skipEmptyLines: true,\n                complete: resolve,\n                error: reject\n            });\n        }))).then(results => {\n\n            this.sourceData = {\n                land: results[0].data.map((data) => this._dataParser(data, 'land')),\n                water: results[1].data.map((data) => this._dataParser(data, 'water')),\n                headbutt: results[2].data.map((data) => this._dataParser(data, 'headbutt')),\n            };\n\n            this.filter();\n\n        });\n    }\n\n    _dataParser(data, type) {\n        delete data.membersAccessible;\n        data.pokedexNumber = data.pokedexNumber.padStart(3, '0');\n        data.membership = data.membership.length > 0;\n        data.morning = !!data.morning;\n        data.day = !!data.day;\n        data.night = !!data.night;\n        data._sortArea = this.regionSorting[data.region] + ' - ' + data.region + ' - ' + data.area;\n        data.min = parseInt(!!data.levels.match(/^(\\d+)-(\\d+)$/) ? data.levels.replace(/^(\\d+)-(\\d+)$/, '$1') : data.levels, 10);\n        data.max = parseInt(!!data.levels.match(/^(\\d+)-(\\d+)$/) ? data.levels.replace(/^(\\d+)-(\\d+)$/, '$2') : data.levels, 10);\n\n        let repelId = type + ' - ' + data.region + ' - ' + data.area;\n\n        if (typeof data.heldItem === 'string' && data.heldItem.length) {\n            const regex = /(\\[\\[([^\\]|]+)(\\|[^\\]]+)?]])/g;\n            const tokens = data.heldItem.replace(regex, '###$1###').split('###');\n\n            const heldItem = [];\n            tokens.forEach((token, tokenIndex) => {\n                if (token.match(regex)) {\n                    token.replace(regex, (...matches) => {\n                        heldItem.push(<a key={repelId + tokenIndex} href={`https://prowiki.info/index.php?title=Special:Search/${matches[2]}`} target=\"_blank\" rel=\"noopener noreferrer\">{matches[2]}</a>)\n                    });\n                } else {\n                    heldItem.push(token);\n                }\n            });\n            data.heldItem = heldItem;\n        }\n\n        if (!this.repelTrickData.hasOwnProperty(repelId)) {\n            this.repelTrickData[repelId] = {};\n        }\n        if (!this.repelTrickData[repelId].hasOwnProperty(data.max)) {\n            this.repelTrickData[repelId][data.max] = 0;\n        }\n        this.repelTrickData[repelId][data.max]++;\n\n        return data;\n    }\n\n    _filterMatchSynonym(name, fname) {\n        let name_match = false;\n        if (this.state.settings.findPokemonSynonyms && this.evolution_synonyms.hasOwnProperty(name)) {\n            this.evolution_synonyms[name].forEach(synonym => {\n                if (fname.length > 0 && synonym === fname) {\n                    name_match = true;\n                }\n            })\n        }\n        return name_match;\n    }\n\n    filter() {\n        const fname = this.state.filter.name;\n        const farea = this.state.filter.area;\n        try {\n            const fareaReg = new RegExp(farea.replace('*', '.*'), 'i');\n            this.types.forEach(type => {\n                this.filteredData[type] = this.sourceData[type].filter(entry => {\n                    let name_match =\n                        (fname.length > 0 && entry.pokemon === fname)\n                        || this._filterMatchSynonym(entry.pokemon, fname);\n                    return name_match\n                        || (farea.length > 0 && entry._sortArea.match(fareaReg) !== null)\n                });\n            });\n        } catch (e) {\n            // do not throw for invalid regex\n            this.filteredData = _.cloneDeep(this.sourceData);\n        }\n        this.sort();\n    }\n\n    sort() {\n        const sorted = {};\n        this.types.forEach(type => {\n            if (this.state.sortBy.column) {\n                sorted[type] = _.sortBy(this.filteredData[type], this.sortByColumns[this.state.sortBy.column]);\n                if (this.state.sortBy.direction === 'descending') {\n                    sorted['type'] = sorted[type].reverse();\n                }\n            } else {\n                sorted[type] = this.filteredData[type];\n            }\n        });\n        this.setState({sorted: sorted});\n    }\n\n    repelTrickPossible(type, data) {\n        if (data.hasOwnProperty('location') && data.location === 'Fishing') return false;\n        let repelId = type + ' - ' + data.region + ' - ' + data.area;\n        if (!this.repelTrickData.hasOwnProperty(repelId)) return false;\n\n        const areaRepelData = this.repelTrickData[repelId];\n\n        const prominent_group_count = Math.max(...Object.values(areaRepelData));\n        const prominent_group_max_level_index = Object.values(areaRepelData).indexOf(prominent_group_count);\n        const prominent_group_max_level = Object.keys(areaRepelData)[prominent_group_max_level_index];\n\n        return data.min > prominent_group_max_level;\n    }\n\n    setFilter(filter, e) {\n        if (e) e.preventDefault();\n        if (!filter.hasOwnProperty('name')) filter.name = this.state.filter.name;\n        if (!filter.hasOwnProperty('area')) filter.area = this.state.filter.area;\n        // eslint-disable-next-line react/no-direct-mutation-state\n        this.state.filter = filter;\n        this.filter();\n    }\n\n    alternateDirection(direction) {\n        return direction === 'ascending' ? 'descending' : 'ascending';\n    }\n\n    sortBy(column) {\n        // eslint-disable-next-line react/no-direct-mutation-state\n        this.state.sortBy = {\n            column: column,\n            direction: this.state.sortBy.column === column ? this.alternateDirection(this.state.sortBy.direction) : 'ascending'\n        };\n        this.filter();\n    }\n\n    getTierClassName(rarity) {\n        switch (rarity) {\n            case \"1\":\n            case \"Common\":\n                return 'green';\n            case \"2\":\n            case \"3\":\n                return 'olive';\n            case \"4\":\n            case \"5\":\n            case \"Intermediate\":\n                return 'yellow';\n            case \"6\":\n            case \"7\":\n            case \"Rare\":\n                return 'orange';\n            case \"8\":\n            case \"9\":\n                return 'red';\n            default:\n                console.error(rarity);\n                throw new Error('rarity not found');\n        }\n    }\n\n    setSetting(setting, value, group) {\n        const settings = this.state.settings;\n        if (group) {\n            settings[group][setting] = value;\n        } else {\n            settings[setting] = value;\n        }\n        this.setState({settings: settings});\n        localStorage.setItem('proSpawnsSettings', JSON.stringify(settings));\n        this.filter();\n    }\n\n    getQuickList() {\n        const quickListData = localStorage.getItem('proSpawnsQuickList');\n        if (quickListData === null) return require('./resources/json/default_quicklist');\n        return JSON.parse(quickListData);\n    }\n\n    saveQuickList(quickListData) {\n        quickListData = quickListData.sort((a, b) => {\n            if (a.id === b.id) return 0;\n            return a.id > b.id ? 1 : -1;\n        });\n        localStorage.setItem('proSpawnsQuickList', JSON.stringify(quickListData));\n        this.forceUpdate();\n    }\n\n    addToQuickList(id, name) {\n        if (!this.inQuickList(id)) {\n            const quickListData = this.getQuickList();\n            quickListData.push({id: id, name: name});\n            this.saveQuickList(quickListData)\n        }\n    }\n\n    removeFromQuickList(id) {\n        const quickListData = this.getQuickList();\n        _.remove(quickListData, {id: id});\n        this.saveQuickList(quickListData);\n    }\n\n    inQuickList(id) {\n        return _.find(this.getQuickList(), {id: id}) !== undefined;\n    }\n\n    renderQuickList() {\n        const quickListData = this.getQuickList();\n        return (\n            !quickListData ? null :\n            <Segment>\n                <List horizontal >\n                    {quickListData.map((entry, index) => (\n                        <List.Item key={index}>\n                            <Button className='btn-lnk' onClick={() => this.setFilter({name: entry.name, area: ''})}>\n                                <i className={`pokedex-sprite pokedex-sprite-${entry.id}`}/>\n                                {entry.name}\n                            </Button>\n                        </List.Item>))}\n                </List>\n            </Segment>\n        );\n    }\n\n    getSourceTypeLabel(type) {\n        switch (type) {\n            case 'headbutt':\n                return 'Headbutting';\n            case 'water':\n                return 'Surfing and Fishing';\n            default:\n                return 'Walking';\n        }\n    }\n\n    renderEvYield(id) {\n        return _.filter(_.find(POKEMON_DATA, {id: id}).ev_yield.map((value, index) => {\n            if (value === 0) return null;\n            switch (index) {\n                case 0: return <small className='ev_yield_hp'><strong>{value}</strong>hp</small>;\n                case 1: return <small className='ev_yield_atk'><strong>{value}</strong>atk</small>;\n                case 2: return <small className='ev_yield_def'><strong>{value}</strong>def</small>;\n                case 3: return <small className='ev_yield_sp_atk'><strong>{value}</strong>sp.atk</small>;\n                case 4: return <small className='ev_yield_sp_def'><strong>{value}</strong>sp.def</small>;\n                case 5: return <small className='ev_yield_spd'><strong>{value}</strong>spd</small>;\n            }\n            return null;\n        }));\n    }\n\n    renderTable(type, data) {\n        if (data.length === 0) {\n            return <Segment>No results for {this.getSourceTypeLabel(type)}</Segment>\n        }\n\n        const icon_morning = <img src=\"https://img.pokemondb.net/images/locations/morning.png\" alt=\"Morning\" title=\"Morning\"/>;\n        const icon_day = <img src=\"https://img.pokemondb.net/images/locations/day.png\" alt=\"Day\" title=\"Day\"/>;\n        const icon_night = <img src=\"https://img.pokemondb.net/images/locations/night.png\" alt=\"Night\" title=\"Night\"/>;\n\n        const icon_rod = <img src=\"https://img.pokemondb.net/sprites/items/fishing-rod.png\" alt=\"Fishing Rod\"/>;\n\n        const icons_rod = {\n            Old: <img src=\"https://img.pokemondb.net/sprites/items/old-rod.png\" alt=\"Old Rod\" title=\"Old Rod\"/>,\n            Good: <img src=\"https://img.pokemondb.net/sprites/items/good-rod.png\" alt=\"Good Rod\" title=\"Good Rod\"/>,\n            Super: <img src=\"https://img.pokemondb.net/sprites/items/super-rod.png\" alt=\"Super Rod\" title=\"Super Rod\"/>,\n        };\n\n        const {column, direction} = this.state.sortBy;\n\n        const showColumns = this.state.settings.showColumns;\n\n        return (\n            <Table key={type} compact='very' basic className={type} sortable unstackable>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell className='header-area' sorted={column === '_sortArea' ? direction : null} onClick={() => this.sortBy('_sortArea')}>\n                            Region - Area\n                        </Table.HeaderCell>\n                        {showColumns.id && (\n                            <Table.HeaderCell textAlign='right' className='header-id' sorted={column === 'pokedexNumber' ? direction : null} onClick={() => this.sortBy('pokedexNumber')}>ID</Table.HeaderCell>\n                        )}\n                        <Table.HeaderCell>Pokemon</Table.HeaderCell>\n                        {showColumns.time_of_day && type !== 'headbutt' && (\n                                <React.Fragment>\n                                    <Table.HeaderCell className='header-morning' sorted={column === 'morning' ? direction : null} onClick={() => this.sortBy('morning')}>M</Table.HeaderCell>\n                                    <Table.HeaderCell className='header-day' sorted={column === 'day' ? direction : null} onClick={() => this.sortBy('day')}>D</Table.HeaderCell>\n                                    <Table.HeaderCell className='header-night' sorted={column === 'night' ? direction : null} onClick={() => this.sortBy('night')}>N</Table.HeaderCell>\n                                </React.Fragment>\n                            )}\n                        {type === 'water' && <Table.HeaderCell className='header-rod'>{icon_rod}</Table.HeaderCell>}\n                        {showColumns.tier && <Table.HeaderCell className='header-tier' sorted={column === 'tier' ? direction : null} onClick={() => this.sortBy('tier')}>\n                            Tier\n                        </Table.HeaderCell>}\n                        {showColumns.ms && <Table.HeaderCell className='header-ms'>MS?</Table.HeaderCell>}\n                        {showColumns.levels && <Table.HeaderCell className='header-levels' textAlign='right' sorted={column === 'min' ? direction : null} onClick={() => this.sortBy('min')}>\n                            Levels\n                        </Table.HeaderCell>}\n                        {type !== 'headbutt' && showColumns.repel && <Table.HeaderCell className='header-repel'>Repel</Table.HeaderCell>}\n                        {showColumns.item && <Table.HeaderCell className='header-item'>Item</Table.HeaderCell>}\n                        {showColumns.ev && <Table.HeaderCell className='header-ev' textAlign='right'>EVs</Table.HeaderCell>}\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {data.map(entry => {\n                        let repelTrickPossible = this.repelTrickPossible(type, entry);\n                        return (\n                            <Table.Row key={JSON.stringify(entry)}>\n                                <Table.Cell>\n                                    <small>{entry.region} - </small>\n                                    <Button className='btn-lnk' onClick={(e) => this.setFilter({name: '', area: entry.area + '$'}, e)}>\n                                        {entry.area}\n                                    </Button>\n                                </Table.Cell>\n                                {showColumns.id && <Table.Cell textAlign='right'><small>{entry.pokedexNumber}</small></Table.Cell>}\n                                <Table.Cell>\n                                    <i className={`pokedex-sprite pokedex-sprite-${entry.pokedexNumber}`}/>\n                                    <Button className='btn-lnk' onClick={(e) => this.setFilter({name: entry.pokemon, area: ''}, e)}>{entry.pokemon}</Button>\n                                    &nbsp;\n                                    <a href={`https://pokemondb.net/pokedex/${entry.pokedexNumber}`} target='_blank' rel=\"noopener noreferrer\">\n                                        <Icon name='external alternate'/>\n                                    </a>\n                                    &nbsp;\n                                    {this.inQuickList(entry.pokedexNumber)\n                                        ? (\n                                            <Button className='btn-lnk' onClick={() => this.removeFromQuickList(entry.pokedexNumber)}>\n                                                <i aria-hidden=\"true\" className=\"bookmark green icon\"/>\n                                            </Button>\n                                        ) : (\n                                            <Button className='btn-lnk' onClick={() => this.addToQuickList(entry.pokedexNumber, entry.pokemon)}>\n                                                <i aria-hidden=\"true\" className=\"bookmark outline grey icon\"/>\n                                            </Button>\n                                        )\n                                    }\n                                </Table.Cell>\n                                {type !== 'headbutt' && showColumns.time_of_day && (\n                                        <React.Fragment>\n                                            <Table.Cell textAlign='center' className={'row-morning ' + (entry.morning ? 'yellow' : '')}>{entry.morning ? icon_morning : null}</Table.Cell>\n                                            <Table.Cell textAlign='center' className={'row-day ' + (entry.day ? 'blue' : '')}>{entry.day ? icon_day : null}</Table.Cell>\n                                            <Table.Cell textAlign='center' className={'row-night ' + (entry.night ? 'grey' : '')}>{entry.night ? icon_night : null}</Table.Cell>\n                                        </React.Fragment>\n                                    )}\n                                {type === 'water'\n                                    ? <Table.Cell className='row-rod'>{entry.rod ? icons_rod[entry.rod] : null}</Table.Cell>\n                                    : null}\n                                {showColumns.tier && <Table.Cell className={'row-tier ' + this.getTierClassName(entry.tier)} textAlign='center'>{entry.tier}</Table.Cell>}\n                                {showColumns.ms && (\n                                    <Table.Cell textAlign='center' className={entry.membership ? 'violet' : ''}>\n                                        {entry.membership ?\n                                        <i className='ui icon dollar sign white'/> : null}\n                                    </Table.Cell>\n                                )}\n                                {showColumns.levels && <Table.Cell textAlign='right'>{entry.levels}</Table.Cell>}\n                                {type !== 'headbutt' && showColumns.repel && (\n                                    <Table.Cell textAlign='center' className={repelTrickPossible ? 'teal' : ''}>{repelTrickPossible ? 'Yes' : null}</Table.Cell>\n                                )}\n                                {showColumns.item && <Table.Cell>{entry.heldItem}</Table.Cell>}\n                                {showColumns.ev && <Table.Cell className='ev_yield' textAlign='right'>{this.renderEvYield(entry.pokedexNumber)}</Table.Cell>}\n                            </Table.Row>\n                        );\n                    })}\n                </Table.Body>\n            </Table>\n        );\n    }\n\n    renderSettingsModal() {\n        const modalOpen = this.state.settingsModalOpen;\n        const showColumns = this.state.settings.showColumns;\n\n        let showColumnsLabels = {\n                \"id\": 'pokedex id',\n                \"time_of_day\": 'time of day',\n                \"tier\": 'tier',\n                \"ms\": 'membership',\n                \"levels\": 'levels',\n                \"repel\": 'repel trick',\n                \"item\": 'held item',\n                \"ev\": 'ev yield'\n        };\n\n        return (\n            <React.Fragment>\n                <Button icon='cog' floated='right' onClick={() => this.setState({settingsModalOpen: true})}/>\n                <Modal size='mini' open={modalOpen} onClose={() => this.setState({settingsModalOpen: false})} >\n                    <Modal.Header>Settings</Modal.Header>\n                    <Modal.Content>\n                        <Form>\n                            {_.map(showColumnsLabels, (label, index) => (\n                                <Form.Field>\n                                    <Checkbox\n                                        label={`show ${label} column`}\n                                        toggle\n                                        checked={showColumns[index]}\n                                        onClick={() => this.setSetting(index, !showColumns[index], 'showColumns')}\n                                    />\n                                </Form.Field>\n                            ))}\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button color='green' onClick={() => this.setState({settingsModalOpen: false})}>\n                            Close\n                        </Button>\n                    </Modal.Actions>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n\n    render() {\n\n        const number_of_results = [].concat(...Object.values(this.state.sorted)).length;\n\n        return (\n            <Container>\n                <Segment>\n                    <Form>\n                        {this.renderSettingsModal()}\n                        <Dropdown\n                            placeholder='pokemon name...'\n                            search\n                            selection\n                            clearable\n                            value={this.state.filter.name}\n                            onChange={(e, obj) => this.setFilter({name: obj.value})}\n                            options={require('./resources/json/pokemon_names').map(name => {return {key: name, value: name, text: name}})}\n                        />\n\n                        &nbsp;\n                        &nbsp;\n\n                        <Input\n                            value={this.state.filter.area}\n                            onChange={(e) => this.setFilter({area: e.target.value})}\n                            icon={{ name: 'close', link: true, onClick: () => this.setFilter({area: ''})}}\n                            placeholder='region/area (regex)...'\n                        />\n                        &nbsp;\n                        &nbsp;\n                        &nbsp;\n                        <strong>{number_of_results} results</strong>\n                        <Form.Field>\n                            <Checkbox label='Include evolutions' checked={this.state.settings.findPokemonSynonyms} onClick={() => this.setSetting('findPokemonSynonyms', !this.state.settings.findPokemonSynonyms)}/>\n                        </Form.Field>\n                    </Form>\n                </Segment>\n\n                {number_of_results > 125\n                    ? <Segment>Too many results to display</Segment>\n                    : (\n                        number_of_results === 0\n                            ? <Segment>Please try searching for something</Segment>\n                            : this.types.map(type => {\n                                const data = this.state.sorted[type];\n                                return this.renderTable(type, data);\n                            }\n                        )\n                    )\n                }\n\n                {this.renderQuickList()}\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}