{"version":3,"sources":["resources/csv/RawSpawnData.csv","resources/csv/RawWaterSpawnData.csv","resources/csv/HeadbuttSpawnData.csv","helpers/spawnDataParser.js","components/Types.js","helpers/helpers.js","components/SpawnTable.js","components/QuickList.js","components/SettingsModal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","spawnDataParser","Object","classCallCheck","this","regionSorting","Kanto","Johto","Hoenn","Sinnoh","Unova","Kalos","Alola","repelTrickData","createClass","key","value","_this","csv_files","require","Promise","resolve","reject","all","map","file","papa_resolve","papa_reject","Papa","header","download","skipEmptyLines","complete","error","then","results","sourceData","land","data","_dataParser","water","headbutt","type","pokedexNumber","padStart","membership","length","membersAccessible","morning","day","night","_sortArea","region","area","uniqueId","_","min","parseInt","levels","match","replace","max","repelId","heldItem","regex","tokens","split","forEach","token","tokenIndex","push","react_default","a","createElement","href","concat","arguments","undefined","target","rel","hasOwnProperty","Types","Fragment","props","types","index","className","toLowerCase","substr","Component","defaultProps","displayAs","POKEMON_DATA","Helpers","id","filter","find","ev_yield","direction","rarity","console","Error","QuickListHelpers","quickListData","localStorage","getItem","JSON","parse","sort","b","setItem","stringify","name","inQuickList","getQuickList","saveQuickList","remove","SpawnTable","getSourceTypeLabel","icon_rod","src","alt","_this$props$sortBy","sortBy","column","showColumns","settings","numberOfColumns","values","reduce","sum","v","pageSize","resultsPerPage","currentPage","pagination","Table","compact","basic","sortable","unstackable","Header","Row","HeaderCell","sorted","onClick","setSortBy","textAlign","time_of_day","tier","ms","repel","item","ev","Body","slice","entry","renderTableRow","Footer","colSpan","Pagination","defaultActivePage","totalPages","Math","ceil","onPageChange","e","_ref","activePage","paginationPageChange","_this2","repelTrickPossible","icon_morning","title","icon_day","icon_night","icons_rod","Old","Good","Super","Cell","Button","setFilter","pokemon","Icon","removeFromQuickList","forceUpdate","aria-hidden","addToQuickList","components_Types","rod","getTierClassName","renderEvYield","QuickList","Segment","List","horizontal","Item","SettingsModal","possibleConstructorReturn","getPrototypeOf","call","state","settingsModalOpen","modalOpen","icon","floated","setState","Modal","size","open","onClose","Content","Form","label","Field","Checkbox","toggle","checked","setSetting","Input","step","onChange","Actions","color","App","filteredData","sortByColumns","evolution_synonyms","stored_settings","assign","pokemon_dropdown_values","text","getSourceData","fname","name_match","findPokemonSynonyms","synonym","farea","fareaReg","RegExp","_filterMatchSynonym","_this3","reverse","location","areaRepelData","prominent_group_count","apply","toConsumableArray","prominent_group_max_level_index","indexOf","prominent_group_max_level","keys","preventDefault","alternateDirection","paginationState","setting","group","_this4","number_of_results","active_index","tab_panes","menuItem","render","Tab","Pane","components_SpawnTable","bind","forceUpdateFromSubComponent","Container","components_SettingsModal","Dropdown","placeholder","search","selection","clearable","obj","options","link","panes","defaultActiveIndex","components_QuickList","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.faf1a68c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RawSpawnData.e4ef9d28.csv\";","module.exports = __webpack_public_path__ + \"static/media/RawWaterSpawnData.f8ca3dfe.csv\";","module.exports = __webpack_public_path__ + \"static/media/HeadbuttSpawnData.bed677a0.csv\";","import * as Papa from \"papaparse\";\nimport _ from \"lodash\";\nimport React from \"react\";\n\nexport class spawnDataParser {\n\n    regionSorting = {\n        Kanto: 1,\n        Johto: 2,\n        Hoenn: 3,\n        Sinnoh: 4,\n        Unova: 5,\n        Kalos: 6,\n        Alola: 7,\n    };\n\n    repelTrickData = {};\n\n    getSourceData() {\n        const csv_files = [\n            require('../resources/csv/RawSpawnData.csv'),\n            require('../resources/csv/RawWaterSpawnData.csv'),\n            require('../resources/csv/HeadbuttSpawnData.csv'),\n        ];\n\n        return new Promise((resolve, reject) => {\n            Promise.all(csv_files.map(file => new Promise((papa_resolve, papa_reject) => {\n                Papa.parse(file, {\n                    header: true,\n                    download: true,\n                    skipEmptyLines: true,\n                    complete: papa_resolve,\n                    error: papa_reject\n                });\n            }))).then(results => {\n\n                resolve({\n                    sourceData: {\n                        land: results[0].data.map((data) => this._dataParser(data, 'land')),\n                        water: results[1].data.map((data) => this._dataParser(data, 'water')),\n                        headbutt: results[2].data.map((data) => this._dataParser(data, 'headbutt')),\n                    },\n                    repelTrickData: this.repelTrickData\n                });\n\n            });\n        });\n\n    }\n\n    _dataParser(data, type) {\n        data.pokedexNumber = data.pokedexNumber.padStart(3, '0');\n        data.membership = data.membership.length > 0 || data.membersAccessible.length;\n        data.morning = !!data.morning;\n        data.day = !!data.day;\n        data.night = !!data.night;\n        data._sortArea = this.regionSorting[data.region] + ' - ' + data.region + ' - ' + data.area;\n        data.uniqueId = _.uniqueId();\n        data.min = parseInt(!!data.levels.match(/^(\\d+)-(\\d+)$/) ? data.levels.replace(/^(\\d+)-(\\d+)$/, '$1') : data.levels, 10);\n        data.max = parseInt(!!data.levels.match(/^(\\d+)-(\\d+)$/) ? data.levels.replace(/^(\\d+)-(\\d+)$/, '$2') : data.levels, 10);\n\n        delete data.membersAccessible;\n\n        let repelId = type + ' - ' + data.region + ' - ' + data.area;\n\n        if (typeof data.heldItem === 'string' && data.heldItem.length) {\n            const regex = /(\\[\\[([^\\]|]+)(\\|[^\\]]+)?]])/g;\n            const tokens = data.heldItem.replace(regex, '###$1###').split('###');\n\n            const heldItem = [];\n            tokens.forEach((token, tokenIndex) => {\n                if (token.match(regex)) {\n                    token.replace(regex, (...matches) => {\n                        heldItem.push(<a key={repelId + tokenIndex} href={`https://prowiki.info/index.php?title=Special:Search/${matches[2]}`} target=\"_blank\" rel=\"noopener noreferrer\">{matches[2]}</a>)\n                    });\n                } else {\n                    heldItem.push(token);\n                }\n            });\n            data.heldItem = heldItem;\n        }\n\n        if (!this.repelTrickData.hasOwnProperty(repelId)) {\n            this.repelTrickData[repelId] = {};\n        }\n        if (!this.repelTrickData[repelId].hasOwnProperty(data.max)) {\n            this.repelTrickData[repelId][data.max] = 0;\n        }\n        this.repelTrickData[repelId][data.max]++;\n\n        return data;\n    }\n}\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass Types extends Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.props.types.map((type, index) => <span key={index + type} className={'type-icon type-'+type.toLowerCase()}>{type.substr(0,3)}</span>)}\n            </React.Fragment>\n        );\n    }\n}\n\nTypes.propTypes = {\n    types: PropTypes.array.isRequired,\n};\n\nTypes.defaultProps = {\n    displayAs: 'short'\n};\n\nexport default Types\n","import _ from \"lodash\";\nimport React from \"react\";\n\nconst POKEMON_DATA = require('../resources/json/pokemon_data');\n\nexport class Helpers {\n\n    static getSourceTypeLabel(type) {\n        switch (type) {\n            case 'headbutt':\n                return 'Headbutting';\n            case 'water':\n                return 'Surfing and Fishing';\n            default:\n                return 'Walking';\n        }\n    }\n\n    static renderEvYield(id) {\n        return _.filter(_.find(POKEMON_DATA, {id: id}).ev_yield.map((value, index) => {\n            if (value === 0) return null;\n            switch (index) {\n                case 0: return <small key={index} className='ev_yield_hp'><strong>{value}</strong>hp</small>;\n                case 1: return <small key={index} className='ev_yield_atk'><strong>{value}</strong>atk</small>;\n                case 2: return <small key={index} className='ev_yield_def'><strong>{value}</strong>def</small>;\n                case 3: return <small key={index} className='ev_yield_sp_atk'><strong>{value}</strong>sp.atk</small>;\n                case 4: return <small key={index} className='ev_yield_sp_def'><strong>{value}</strong>sp.def</small>;\n                case 5: return <small key={index} className='ev_yield_spd'><strong>{value}</strong>spd</small>;\n                default: return null;\n            }\n        }));\n    }\n\n    static alternateDirection(direction) {\n        return direction === 'ascending' ? 'descending' : 'ascending';\n    }\n\n    static getTierClassName(rarity) {\n        switch (rarity) {\n            case \"1\":\n            case \"Common\":\n                return 'green';\n            case \"2\":\n            case \"3\":\n                return 'olive';\n            case \"4\":\n            case \"5\":\n            case \"Intermediate\":\n                return 'yellow';\n            case \"6\":\n            case \"7\":\n            case \"Rare\":\n                return 'orange';\n            case \"8\":\n            case \"9\":\n                return 'red';\n            default:\n                console.error(rarity);\n                throw new Error('rarity not found');\n        }\n    }\n}\n\nexport class QuickListHelpers {\n    /**\n     * @returns {array}\n     */\n    static getQuickList() {\n        const quickListData = localStorage.getItem('proSpawnsQuickList');\n        if (quickListData === null) return require('../resources/json/default_quicklist');\n        return JSON.parse(quickListData);\n    }\n\n    static saveQuickList(quickListData) {\n        quickListData = quickListData.sort((a, b) => {\n            if (a.id === b.id) return 0;\n            return a.id > b.id ? 1 : -1;\n        });\n        localStorage.setItem('proSpawnsQuickList', JSON.stringify(quickListData));\n    }\n\n    static addToQuickList(id, name) {\n        if (!this.inQuickList(id)) {\n            const quickListData = this.getQuickList();\n            quickListData.push({id: id, name: name});\n            this.saveQuickList(quickListData)\n        }\n    }\n\n    static removeFromQuickList(id) {\n        const quickListData = this.getQuickList();\n        _.remove(quickListData, {id: id});\n        this.saveQuickList(quickListData);\n    }\n\n    static inQuickList(id) {\n        return _.find(this.getQuickList(), {id: id}) !== undefined;\n    }\n}\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Button, Icon, Pagination, Table} from \"semantic-ui-react\";\nimport Types from \"./Types\";\nimport _ from \"lodash\";\nimport {Helpers, QuickListHelpers} from \"../helpers/helpers\";\n\nconst POKEMON_DATA = require('../resources/json/pokemon_data');\n\nclass SpawnTable extends Component {\n\n    render() {\n        const data = this.props.data;\n        const type = this.props.type;\n\n        if (data.length === 0) {\n            return <React.Fragment>No results for {Helpers.getSourceTypeLabel(type)}</React.Fragment>\n        }\n\n        const icon_rod = <img src=\"https://img.pokemondb.net/sprites/items/fishing-rod.png\" alt=\"Fishing Rod\"/>;\n\n        const {column, direction} = this.props.sortBy;\n\n        const showColumns = this.props.settings.showColumns;\n\n        const numberOfColumns = 2 + Object.values(showColumns).reduce((sum, v) => sum + (v ? 1 : 0));\n        const pageSize = this.props.settings.resultsPerPage;\n        const currentPage = this.props.pagination[type];\n\n        return (\n            <Table key={type} compact='very' basic className={type} sortable unstackable>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell className='header-area' sorted={column === '_sortArea' ? direction : null} onClick={() => this.props.setSortBy('_sortArea')}>\n                            Region - Area\n                        </Table.HeaderCell>\n                        {showColumns.id && (\n                            <Table.HeaderCell textAlign='right' className='header-id' sorted={column === 'pokedexNumber' ? direction : null} onClick={() => this.props.setSortBy('pokedexNumber')}>ID</Table.HeaderCell>\n                        )}\n                        <Table.HeaderCell>Pokemon</Table.HeaderCell>\n                        {showColumns.time_of_day && type !== 'headbutt' && (\n                            <React.Fragment>\n                                <Table.HeaderCell className='header-morning' sorted={column === 'morning' ? direction : null} onClick={() => this.props.setSortBy('morning')}>M</Table.HeaderCell>\n                                <Table.HeaderCell className='header-day' sorted={column === 'day' ? direction : null} onClick={() => this.props.setSortBy('day')}>D</Table.HeaderCell>\n                                <Table.HeaderCell className='header-night' sorted={column === 'night' ? direction : null} onClick={() => this.props.setSortBy('night')}>N</Table.HeaderCell>\n                            </React.Fragment>\n                        )}\n                        {type === 'water' && <Table.HeaderCell className='header-rod'>{icon_rod}</Table.HeaderCell>}\n                        {showColumns.tier && <Table.HeaderCell className='header-tier' sorted={column === 'tier' ? direction : null} onClick={() => this.props.setSortBy('tier')}>\n                            Tier\n                        </Table.HeaderCell>}\n                        {showColumns.ms && <Table.HeaderCell className='header-ms'>MS?</Table.HeaderCell>}\n                        {showColumns.levels && <Table.HeaderCell className='header-levels' textAlign='right' sorted={column === 'min' ? direction : null} onClick={() => this.props.setSortBy('min')}>\n                            Levels\n                        </Table.HeaderCell>}\n                        {type !== 'headbutt' && showColumns.repel && <Table.HeaderCell className='header-repel'>Repel</Table.HeaderCell>}\n                        {showColumns.item && <Table.HeaderCell className='header-item'>Item</Table.HeaderCell>}\n                        {showColumns.ev && <Table.HeaderCell className='header-ev' textAlign='right'>EVs</Table.HeaderCell>}\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {data\n                        .slice((currentPage-1)*pageSize, currentPage*pageSize)\n                        .map(entry => this.renderTableRow(entry, type))}\n                </Table.Body>\n                {data.length > pageSize &&\n                <Table.Footer>\n                    <Table.Row>\n                        <Table.HeaderCell colSpan={numberOfColumns}>\n                            <Pagination\n                                defaultActivePage={this.props.pagination[type]}\n                                totalPages={Math.ceil(data.length / pageSize)}\n                                onPageChange={(e, {activePage}) => {\n                                    this.props.paginationPageChange(activePage, type);\n                                }}\n                            />\n                        </Table.HeaderCell>\n                    </Table.Row>\n                </Table.Footer>}\n            </Table>\n        );\n    }\n\n    renderTableRow(entry, type) {\n        const showColumns = this.props.settings.showColumns;\n        const repelTrickPossible = this.props.repelTrickPossible(type, entry);\n\n        const icon_morning = <img src=\"https://img.pokemondb.net/images/locations/morning.png\" alt=\"Morning\" title=\"Morning\"/>;\n        const icon_day = <img src=\"https://img.pokemondb.net/images/locations/day.png\" alt=\"Day\" title=\"Day\"/>;\n        const icon_night = <img src=\"https://img.pokemondb.net/images/locations/night.png\" alt=\"Night\" title=\"Night\"/>;\n\n        const icons_rod = {\n            Old: <img src=\"https://img.pokemondb.net/sprites/items/old-rod.png\" alt=\"Old Rod\" title=\"Old Rod\"/>,\n            Good: <img src=\"https://img.pokemondb.net/sprites/items/good-rod.png\" alt=\"Good Rod\" title=\"Good Rod\"/>,\n            Super: <img src=\"https://img.pokemondb.net/sprites/items/super-rod.png\" alt=\"Super Rod\" title=\"Super Rod\"/>,\n        };\n\n        return (\n            <Table.Row key={entry.uniqueId}>\n                <Table.Cell>\n                    <small>{entry.region} - </small>\n                    <Button className='btn-lnk' onClick={(e) => this.props.setFilter({name: '', area: entry.area + '$'}, e)}>\n                        {entry.area}\n                    </Button>\n                </Table.Cell>\n                {showColumns.id && <Table.Cell textAlign='right'><small>{entry.pokedexNumber}</small></Table.Cell>}\n                <Table.Cell>\n                    <i className={`pokedex-sprite pokedex-sprite-${entry.pokedexNumber}`}/>\n                    <Button className='btn-lnk' onClick={(e) => this.props.setFilter({name: entry.pokemon, area: ''}, e)}>{entry.pokemon}</Button>\n                    &nbsp;\n                    <a href={`https://pokemondb.net/pokedex/${entry.pokedexNumber}`} target='_blank' rel=\"noopener noreferrer\">\n                        <Icon name='external alternate'/>\n                    </a>\n                    &nbsp;\n                    {QuickListHelpers.inQuickList(entry.pokedexNumber)\n                        ? (\n                            <Button className='btn-lnk' onClick={() => {QuickListHelpers.removeFromQuickList(entry.pokedexNumber);this.props.forceUpdate()}}>\n                                <i aria-hidden=\"true\" className=\"bookmark green icon\"/>\n                            </Button>\n                        ) : (\n                            <Button className='btn-lnk' onClick={() => {QuickListHelpers.addToQuickList(entry.pokedexNumber, entry.pokemon);this.props.forceUpdate()}}>\n                                <i aria-hidden=\"true\" className=\"bookmark outline grey icon\"/>\n                            </Button>\n                        )\n                    }\n                    {showColumns.types && <Types types={_.find(POKEMON_DATA, {id: entry.pokedexNumber}).types}/>}\n                </Table.Cell>\n                {type !== 'headbutt' && showColumns.time_of_day && (\n                    <React.Fragment>\n                        <Table.Cell textAlign='center' className={'row-morning ' + (entry.morning ? 'yellow' : '')}>{entry.morning ? icon_morning : null}</Table.Cell>\n                        <Table.Cell textAlign='center' className={'row-day ' + (entry.day ? 'blue' : '')}>{entry.day ? icon_day : null}</Table.Cell>\n                        <Table.Cell textAlign='center' className={'row-night ' + (entry.night ? 'grey' : '')}>{entry.night ? icon_night : null}</Table.Cell>\n                    </React.Fragment>\n                )}\n                {type === 'water'\n                    ? <Table.Cell className='row-rod'>{entry.rod ? icons_rod[entry.rod] : null}</Table.Cell>\n                    : null}\n                {showColumns.tier && <Table.Cell className={'row-tier ' + Helpers.getTierClassName(entry.tier)} textAlign='center'>{entry.tier}</Table.Cell>}\n                {showColumns.ms && (\n                    <Table.Cell textAlign='center' className={entry.membership ? 'violet' : ''}>\n                        {entry.membership ?\n                            <i className='ui icon dollar sign white'/> : null}\n                    </Table.Cell>\n                )}\n                {showColumns.levels && <Table.Cell textAlign='right'>{entry.levels}</Table.Cell>}\n                {type !== 'headbutt' && showColumns.repel && (\n                    <Table.Cell textAlign='center' className={repelTrickPossible ? 'teal' : ''}>{repelTrickPossible ? 'Yes' : null}</Table.Cell>\n                )}\n                {showColumns.item && <Table.Cell>{entry.heldItem}</Table.Cell>}\n                {showColumns.ev && <Table.Cell className='ev_yield' textAlign='right'>{Helpers.renderEvYield(entry.pokedexNumber)}</Table.Cell>}\n            </Table.Row>\n        );\n    }\n}\n\nSpawnTable.propTypes = {\n    data: PropTypes.array.isRequired,\n    type: PropTypes.string.isRequired,\n    settings: PropTypes.object.isRequired,\n    repelTrickPossible: PropTypes.func.isRequired,\n    setFilter: PropTypes.func.isRequired,\n    sortBy: PropTypes.object.isRequired,\n    setSortBy: PropTypes.func.isRequired,\n    forceUpdate: PropTypes.func.isRequired,\n    pagination: PropTypes.object.isRequired,\n    paginationPageChange: PropTypes.func.isRequired,\n};\n\nexport default SpawnTable\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Button, List, Segment} from \"semantic-ui-react\";\nimport {QuickListHelpers} from \"../helpers/helpers\";\n\nclass QuickList extends Component {\n\n    render() {\n        const quickListData = QuickListHelpers.getQuickList();\n        return (\n            !quickListData ? null :\n                <Segment>\n                    <List horizontal >\n                        {quickListData.map((entry, index) => (\n                            <List.Item key={index}>\n                                <Button className='btn-lnk' onClick={() => this.props.setFilter({name: entry.name, area: ''})}>\n                                    <i className={`pokedex-sprite pokedex-sprite-${entry.id}`}/>\n                                    {entry.name}\n                                </Button>\n                            </List.Item>))}\n                    </List>\n                </Segment>\n        );\n    }\n}\n\nQuickList.propTypes = {\n    setFilter: PropTypes.func.isRequired\n};\n\nexport default QuickList\n","import React, {Component} from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Button, Checkbox, Form, Modal} from \"semantic-ui-react\";\nimport _ from \"lodash\";\n\nclass SettingsModal extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            settingsModalOpen: false,\n        };\n    }\n\n    render() {\n        const modalOpen = this.state.settingsModalOpen;\n        const settings = this.props.settings;\n        const showColumns = settings.showColumns;\n\n        let showColumnsLabels = {\n            \"id\": 'pokedex id',\n            \"types\": 'pokemon types',\n            \"time_of_day\": 'time of day',\n            \"tier\": 'tier',\n            \"ms\": 'membership',\n            \"levels\": 'levels',\n            \"repel\": 'repel trick',\n            \"item\": 'held item',\n            \"ev\": 'ev yield'\n        };\n\n        return (\n            <React.Fragment>\n                <Button icon='cog' floated='right' onClick={() => this.setState({settingsModalOpen: true})}/>\n                <Modal size='mini' open={modalOpen} onClose={() => this.setState({settingsModalOpen: false})} >\n                    <Modal.Header>Settings</Modal.Header>\n                    <Modal.Content>\n                        <Form>\n                            {_.map(showColumnsLabels, (label, index) => (\n                                <Form.Field key={label + index}>\n                                    <Checkbox\n                                        label={`show ${label} column`}\n                                        toggle\n                                        checked={showColumns[index]}\n                                        onClick={() => this.props.setSetting(index, !showColumns[index], 'showColumns')}\n                                    />\n                                </Form.Field>\n                            ))}\n\n                            <Form.Field>\n                                <Form.Input\n                                    label={`results per page: ${settings.resultsPerPage}`}\n                                    min={10}\n                                    max={50}\n                                    name='resultsPerPage'\n                                    step={10}\n                                    type='range'\n                                    value={settings.resultsPerPage}\n                                    onChange={(e, {value}) => this.props.setSetting('resultsPerPage', value)}\n                                />\n                            </Form.Field>\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button color='green' onClick={() => this.setState({settingsModalOpen: false})}>\n                            Close\n                        </Button>\n                    </Modal.Actions>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n}\n\nSettingsModal.propTypes = {\n    setSetting: PropTypes.func.isRequired,\n    settings: PropTypes.object.isRequired,\n};\n\nexport default SettingsModal\n","import React, {Component} from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport './resources/pokdex_sprites.css';\nimport {Checkbox, Container, Dropdown, Form, Input, Segment, Tab} from \"semantic-ui-react\";\nimport _ from 'lodash';\nimport {spawnDataParser} from \"./helpers/spawnDataParser\";\nimport SpawnTable from \"./components/SpawnTable\";\nimport {Helpers} from \"./helpers/helpers\";\nimport QuickList from \"./components/QuickList\";\nimport SettingsModal from \"./components/SettingsModal\";\n\nclass App extends Component {\n\n    types = ['land', 'water', 'headbutt'];\n\n    sourceData = {\n        land: [],\n        water: [],\n        headbutt: [],\n    };\n\n    filteredData = {\n        land: [],\n        water: [],\n        headbutt: [],\n    };\n\n    repelTrickData = {};\n\n    sortByColumns = {\n        pokedexNumber: ['pokedexNumber', '_sortArea', 'location'],\n        _sortArea: ['_sortArea', 'tier', 'pokedexNumber', 'location'],\n        min: ['min', '_sortArea', 'location'],\n        tier: ['tier', '_sortArea', 'pokedexNumber', 'location'],\n        morning: ['morning', 'day', 'night', '_sortArea', 'pokedexNumber', 'location'],\n        day: ['day', 'morning', 'night', '_sortArea', 'pokedexNumber', 'location'],\n        night: ['night', 'morning', 'day', '_sortArea', 'pokedexNumber', 'location'],\n    };\n\n    constructor() {\n        super();\n\n        this.evolution_synonyms = require('./resources/json/evolution_synonyms');\n\n        this.state = {\n            filter: {\n                name: '',\n                area: ''\n            },\n            sortBy: {\n                column: '_sortArea',\n                direction: 'ascending'\n            },\n            sorted: {\n                land: [],\n                water: [],\n                headbutt: [],\n            },\n            settingsModalOpen: false,\n            pagination: {\n                land: 1,\n                water: 1,\n                headbutt: 1\n            },\n        };\n\n        const stored_settings = localStorage.getItem('proSpawnsSettings') === null\n            ? {}\n            : JSON.parse(localStorage.getItem('proSpawnsSettings'));\n\n        this.state.settings = Object.assign({}, require('./resources/json/default_settings'), stored_settings);\n\n        this.pokemon_dropdown_values = require('./resources/json/pokemon_data')\n            .map(entry => {return {key: entry.id, value: entry.name, text: entry.id + ': ' + entry.name}});\n\n        let dataParser = new spawnDataParser();\n\n        dataParser.getSourceData().then(results => {\n            const {sourceData, repelTrickData} = results;\n\n            this.sourceData = sourceData;\n            this.repelTrickData = repelTrickData;\n            this.filter();\n        });\n    }\n\n    _filterMatchSynonym(name, fname) {\n        let name_match = false;\n        if (this.state.settings.findPokemonSynonyms && this.evolution_synonyms.hasOwnProperty(name)) {\n            this.evolution_synonyms[name].forEach(synonym => {\n                if (fname.length > 0 && synonym === fname) {\n                    name_match = true;\n                }\n            })\n        }\n        return name_match;\n    }\n\n    filter() {\n        const fname = this.state.filter.name;\n        const farea = this.state.filter.area;\n\n        if (fname.length === 0 && farea.length === 0) {\n            this.filteredData = Object.assign({}, this.sourceData);\n        } else {\n            try {\n                const fareaReg = new RegExp(farea.replace('*', '.*'), 'i');\n                this.types.forEach(type => {\n                    this.filteredData[type] = this.sourceData[type].filter(entry => {\n                        let name_match =\n                            (fname.length > 0 && entry.pokemon === fname)\n                            || this._filterMatchSynonym(entry.pokemon, fname);\n                        return name_match\n                            || (farea.length > 0 && entry._sortArea.match(fareaReg) !== null)\n                    });\n                });\n            } catch (e) {\n                // do not throw for invalid regex\n                this.filteredData = Object.assign({}, this.sourceData);\n            }\n        }\n\n        // reset pagination when filters change\n        // eslint-disable-next-line react/no-direct-mutation-state\n        this.state.pagination = {\n            land: 1,\n            water: 1,\n            headbutt: 1\n        };\n        this.sort();\n    }\n\n    sort() {\n        const sorted = {};\n        this.types.forEach(type => {\n            if (this.state.sortBy.column) {\n                sorted[type] = _.sortBy(this.filteredData[type], this.sortByColumns[this.state.sortBy.column]);\n                if (this.state.sortBy.direction === 'descending') {\n                    sorted['type'] = sorted[type].reverse();\n                }\n            } else {\n                sorted[type] = this.filteredData[type];\n            }\n        });\n        this.setState({sorted: sorted});\n    }\n\n    repelTrickPossible(type, data) {\n        if (data.hasOwnProperty('location') && data.location === 'Fishing') return false;\n        let repelId = type + ' - ' + data.region + ' - ' + data.area;\n        if (!this.repelTrickData.hasOwnProperty(repelId)) return false;\n\n        const areaRepelData = this.repelTrickData[repelId];\n\n        const prominent_group_count = Math.max(...Object.values(areaRepelData));\n        const prominent_group_max_level_index = Object.values(areaRepelData).indexOf(prominent_group_count);\n        const prominent_group_max_level = Object.keys(areaRepelData)[prominent_group_max_level_index];\n\n        return data.min > prominent_group_max_level;\n    }\n\n    setFilter(filter, e) {\n        if (e) e.preventDefault();\n        if (!filter.hasOwnProperty('name')) filter.name = this.state.filter.name;\n        if (!filter.hasOwnProperty('area')) filter.area = this.state.filter.area;\n        // eslint-disable-next-line react/no-direct-mutation-state\n        this.state.filter = filter;\n        this.filter();\n    }\n\n    sortBy(column) {\n        // eslint-disable-next-line react/no-direct-mutation-state\n        this.state.sortBy = {\n            column: column,\n            direction: this.state.sortBy.column === column ? Helpers.alternateDirection(this.state.sortBy.direction) : 'ascending'\n        };\n        this.filter();\n    }\n\n    paginationPageChange(activePage, type) {\n        const paginationState = this.state.pagination;\n        paginationState[type] = activePage;\n        this.setState({pagination: paginationState});\n    }\n\n    setSetting(setting, value, group) {\n        const settings = this.state.settings;\n        if (group) {\n            settings[group][setting] = value;\n        } else {\n            settings[setting] = value;\n        }\n        this.setState({settings: settings});\n        localStorage.setItem('proSpawnsSettings', JSON.stringify(settings));\n        this.filter();\n    }\n\n    forceUpdateFromSubComponent() {\n        this.forceUpdate();\n    }\n\n    render() {\n\n        const number_of_results = [].concat(...Object.values(this.state.sorted)).length;\n\n        let active_index = 0;\n\n        const tab_panes = this.types.map((type, index) => {\n            const data = this.state.sorted[type];\n            if (data.length === 0 && active_index === index) active_index++;\n            return {\n                menuItem: Helpers.getSourceTypeLabel(type) + ` (${data.length})`,\n                render: () => (\n                    <Tab.Pane>\n                        <SpawnTable\n                            data={data}\n                            type={type}\n                            repelTrickPossible={this.repelTrickPossible.bind(this)}\n                            setFilter={this.setFilter.bind(this)}\n                            setSortBy={this.sortBy.bind(this)}\n                            forceUpdate={this.forceUpdateFromSubComponent.bind(this)}\n                            paginationPageChange={this.paginationPageChange.bind(this)}\n                            {...this.state}\n                        />\n                    </Tab.Pane>\n                )\n            }\n        });\n\n        return (\n            <Container>\n                <Segment>\n                    <Form>\n                        <SettingsModal\n                            setSetting={this.setSetting.bind(this)}\n                            {...this.state}\n                        />\n                        <Dropdown\n                            placeholder='pokemon name...'\n                            search\n                            selection\n                            clearable\n                            value={this.state.filter.name}\n                            onChange={(e, obj) => this.setFilter({name: obj.value})}\n                            options={this.pokemon_dropdown_values}\n                        />\n\n                        &nbsp;\n                        &nbsp;\n\n                        <Input\n                            value={this.state.filter.area}\n                            onChange={(e) => this.setFilter({area: e.target.value})}\n                            icon={{ name: 'close', link: true, onClick: () => this.setFilter({area: ''})}}\n                            placeholder='region/area (regex)...'\n                        />\n                        &nbsp;\n                        &nbsp;\n                        &nbsp;\n                        <strong>{number_of_results} results</strong>\n                        <Form.Field>\n                            <Checkbox label='Include evolutions' checked={this.state.settings.findPokemonSynonyms} onClick={() => this.setSetting('findPokemonSynonyms', !this.state.settings.findPokemonSynonyms)}/>\n                        </Form.Field>\n                    </Form>\n                </Segment>\n\n                {number_of_results === 0\n                    ? <React.Fragment>No results for current filters</React.Fragment>\n                    : <Tab panes={tab_panes} defaultActiveIndex={active_index} />\n                }\n\n                <QuickList setFilter={this.setFilter.bind(this)}/>\n            </Container>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}